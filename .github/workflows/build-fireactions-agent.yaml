---
name: build-fireactions-agent

on:
  push:
    tags:
    - "fireactions-agent-**"

permissions:
  packages: write
  contents: write

jobs:
  build:
    runs-on: ubuntu-latest
    strategy:
      fail-fast: true
      matrix:
        os:
        - linux
        arch:
        - amd64
        - arm64
    steps:
    - name: Checkout
      uses: actions/checkout@v4

    - name: Set up Go
      uses: actions/setup-go@v4
      with:
        go-version: '1.20'

    - name: Parse tag
      run: |
        echo "TAG=$(echo ${GITHUB_REF#refs/*/} | sed 's/fireactions-agent-//')" >> $GITHUB_ENV

    - name: Install dependencies
      working-directory: agent
      run: |
        go mod download

    - name: Build
      working-directory: agent
      run: |
        GO111MODULE=on CGO_ENABLED=0 GOOS=linux GOARCH=amd64 go build -v -o fireactions-agent-${{ env.TAG }}-${{ matrix.os }}-${{ matrix.arch }} ./cmd/fireactions-agent/main.go
        echo "${{ hashFiles('fireactions-agent-${{ env.TAG }}-${{ matrix.os }}-${{ matrix.arch }}') }}" > fireactions-agent-${{ env.TAG }}-${{ matrix.os }}-${{ matrix.arch }}.sha256

    - name: Release
      uses: softprops/action-gh-release@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        generate_release_notes: false
        name: "fireactions-agent: ${{ env.TAG }}"
        files: |
          agent/fireactions-agent-${{ env.TAG }}-${{ matrix.os }}-${{ matrix.arch }}.sha256
          agent/fireactions-agent-${{ env.TAG }}-${{ matrix.os }}-${{ matrix.arch }}
