---
name: build-runner

on:
  push:
    branches:
    - main
    paths:
    - contrib/**
  workflow_dispatch:
  workflow_run:
    workflows: ["build-fireactions-agent"]
    types:
      - completed

permissions:
  packages: write
  contents: write

jobs:
  build:
    runs-on: ubuntu-latest

    strategy:
      fail-fast: false
      matrix:
        os: ["ubuntu-20.04", "ubuntu-22.04"]
        arch: ["amd64", "arm64"]

    steps:
    - name: Checkout
      uses: actions/checkout@v4

    - name: Setup GH CLI
      uses: sersoft-gmbh/setup-gh-cli-action@v2
      with:
        version: stable

    - name: Get latest fireactions-agent release
      env:
        GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      run: |
        echo "AGENT_TAG=$(gh release list | grep fireactions-agent | head -1 | awk {'print $3'})" >> $GITHUB_ENV

    - name: Set latest fireactions-agent version
      run: |
        echo "AGENT_VERSION=$(echo ${{ env.AGENT_TAG }} | sed 's/fireactions-agent-//')" >> $GITHUB_ENV

    - name: Set GitHub runner version
      run: |
        echo RUNNER_VERSION=$(cat contrib/runner_version) >> $GITHUB_ENV

    - name: Download fireactions-agent
      uses: robinraju/release-downloader@v1.8
      with:
        tag: ${{ env.AGENT_TAG }}
        fileName: "fireactions-agent*"
        tarBall: false
        zipBall: false

    - name: Log in to the Container registry
      uses: docker/login-action@v3
      with:
        registry: ghcr.io
        username: ${{ github.actor }}
        password: ${{ secrets.GITHUB_TOKEN }}

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v3

    - name: Set Docker tags
      run: |
        echo "TIMESTAMP=$(date +'%Y%m%d%H%M%S')" >> $GITHUB_ENV

    - name: Build and push Docker image
      uses: docker/build-push-action@v5
      with:
        provenance: false
        context: .
        file: contrib/${{ matrix.os }}.Dockerfile
        push: ${{ github.event_name != 'pull_request' }}
        build-args: |
          ARCH=${{ matrix.arch }}
          RUNNER_VERSION=${{ env.RUNNER_VERSION }}
          AGENT_VERSION=${{ env.AGENT_VERSION }}
        tags: |
          ghcr.io/${{ github.repository }}/runner:${{ matrix.os }}-${{ matrix.arch }}-agent_${{ env.AGENT_VERSION }}-runner_${{ env.RUNNER_VERSION }}-${{ env.TIMESTAMP }},
          ghcr.io/${{ github.repository }}/runner:${{ matrix.os }}-${{ matrix.arch }}-agent_${{ env.AGENT_VERSION }}-runner_${{ env.RUNNER_VERSION }},
          ghcr.io/${{ github.repository }}/runner:${{ matrix.os }}-${{ matrix.arch }}-agent_${{ env.AGENT_VERSION }},
          ghcr.io/${{ github.repository }}/runner:${{ matrix.os }}-${{ matrix.arch }}
        platforms: linux/${{ matrix.arch }}

    - name: Trigger hostinger runner image update workflow
      if: ${{ matrix.arch == 'amd64' }}
      env:
        GH_TOKEN: ${{ secrets.ORG_GITHUB_TOKEN }}
      run: |
        echo '
          {
            "os":"${{ matrix.os }}",
            "tag": "${{ matrix.os }}-${{ matrix.arch }}-agent_${{ env.AGENT_VERSION }}-runner_${{ env.RUNNER_VERSION }}-${{ env.TIMESTAMP }}",
            "runner_version":"${{ env.RUNNER_VERSION }}",
            "agent_version": "${{ env.AGENT_VERSION }}"
          }
        ' | \
        gh workflow run update.yml --repo hostinger/fireactions-runner-images --json
