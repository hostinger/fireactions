// Code generated by MockGen. DO NOT EDIT.
// Source: internal/server/handler/github.go
//
// Generated by this command:
//
//	mockgen -source internal/server/handler/github.go -destination internal/server/handler/mock/github_token_getter.go -package mock GitHubTokenGetter
//
// Package mock is a generated GoMock package.
package mock

import (
	context "context"
	reflect "reflect"

	gomock "go.uber.org/mock/gomock"
)

// MockGitHubTokenGetter is a mock of GitHubTokenGetter interface.
type MockGitHubTokenGetter struct {
	ctrl     *gomock.Controller
	recorder *MockGitHubTokenGetterMockRecorder
}

// MockGitHubTokenGetterMockRecorder is the mock recorder for MockGitHubTokenGetter.
type MockGitHubTokenGetterMockRecorder struct {
	mock *MockGitHubTokenGetter
}

// NewMockGitHubTokenGetter creates a new mock instance.
func NewMockGitHubTokenGetter(ctrl *gomock.Controller) *MockGitHubTokenGetter {
	mock := &MockGitHubTokenGetter{ctrl: ctrl}
	mock.recorder = &MockGitHubTokenGetterMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockGitHubTokenGetter) EXPECT() *MockGitHubTokenGetterMockRecorder {
	return m.recorder
}

// GetRegistrationToken mocks base method.
func (m *MockGitHubTokenGetter) GetRegistrationToken(ctx context.Context, org string) (string, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetRegistrationToken", ctx, org)
	ret0, _ := ret[0].(string)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GetRegistrationToken indicates an expected call of GetRegistrationToken.
func (mr *MockGitHubTokenGetterMockRecorder) GetRegistrationToken(ctx, org any) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetRegistrationToken", reflect.TypeOf((*MockGitHubTokenGetter)(nil).GetRegistrationToken), ctx, org)
}

// GetRemoveToken mocks base method.
func (m *MockGitHubTokenGetter) GetRemoveToken(ctx context.Context, org string) (string, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetRemoveToken", ctx, org)
	ret0, _ := ret[0].(string)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GetRemoveToken indicates an expected call of GetRemoveToken.
func (mr *MockGitHubTokenGetterMockRecorder) GetRemoveToken(ctx, org any) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetRemoveToken", reflect.TypeOf((*MockGitHubTokenGetter)(nil).GetRemoveToken), ctx, org)
}
